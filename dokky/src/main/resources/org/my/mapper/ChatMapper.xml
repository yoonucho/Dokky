<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.my.mapper.ChatMapper">
	
	   <select id="hasRoom" resultType="String">
			select room.chatRoomNum from dk_chat_room room INNER JOIN dk_chat_member member ON room.chatRoomNum = member.chatRoomNum 
					where room.roomownerid = #{roomOwnerId} and member.chat_memberId = #{chat_memberId} and room.chat_type = 0
	   </select>
	   
       <insert id="createChatRoom">
       
	       	<selectKey keyProperty="chatRoomNum" order="BEFORE" resultType="long">
					select seq_dk_chat_room.nextval from dual
			</selectKey>
	
 			insert into dk_chat_room (	  chatRoomNum
							 			, roomOwnerId
							 			, roomOwnerNick
							 			, chat_type
							 			, headCount
					 			   )
					 		values(
						 				 #{chatRoomNum}
										,#{roomOwnerId}
										,#{roomOwnerNick}
										,#{chat_type}				 		
										,#{headCount}				 		
					 				) 
       </insert>
       
       <insert id="createChatMember">
	 			insert into dk_chat_member (	  chatRoomNum
									 			, chat_memberId
									 			, chat_memberNick
							 			   )
							 		values(
								 				 #{chatRoomNum}
												,#{chat_memberId}
												,#{chat_memberNick}
							 				) 
       </insert>
				
		<select id="getChatContents" resultType="org.my.domain.ChatContentVO"> 
				  	  select /*+INDEX_ASC(dk_chat_content pk_chat_content) */
				  	  												  chatContentNum	
								     								, chat_writerId
															    	, chat_writerNick
															    	, chat_content
															    	, content_type
															    	, regdate
															    	, readCount
								from dk_chat_content 
								where chatRoomNum = #{chatRoomNum}  
								
								<if test="recentOutDate != null">
								
								and regdate > #{recentOutDate}
								
								</if>
								
								and chatContentNum > 0
		</select>
		
		<select id="getChatMember" resultType="org.my.domain.ChatMemberVO"> 
				  select chat_memberId, chat_memberNick from dk_chat_member where chatRoomNum = #{chatRoomNum} and chat_memberId != #{userId}
		</select>
		
		<insert id="createChatContent">
		
		   	<selectKey keyProperty="chatContentNum" order="BEFORE" resultType="long">
					select seq_dk_chat_content.nextval from dual
			</selectKey>
			
	 			insert into dk_chat_content (	  chatContentNum
									 			, chatRoomNum
									 			, chat_content
									 			, chat_writerId
									 			, chat_writerNick
									 			, regDate
									 			, readCount
							 			   )
							 		values(
								 				 #{chatContentNum}
												,#{chatRoomNum}
												,#{chat_content}
												,#{chat_writerId}
												,#{chat_writerNick}
												,#{regDate}
												,#{readCount}
							 				) 
       </insert>
       
       <insert id="createNoticeContent">
	 			insert into dk_chat_content (	  chatContentNum
									 			, chatRoomNum
									 			, chat_content
		 										, content_type
							 			   )
							 		values(
								 				 seq_dk_chat_content.nextval
												,#{chatRoomNum}
												,#{chat_content}
												, 1
							 				) 	
       </insert>
       
	   <update id="updateOutDate">
	 	 	update dk_chat_member set recentOutDate = sysdate where chatRoomNum = #{chatRoomNum} and chat_memberId = #{chat_memberId} 
	   </update>
	   
	   <select id="getRecentOutDate" resultType="Date"> 
			  select recentOutDate from dk_chat_member where chatRoomNum = #{chatRoomNum} and chat_memberId = #{chat_memberId}
	   </select>
       
       <update id="updateHeadCount">
	 	 	update dk_chat_room set headCount = headCount + #{changeCount} where chatRoomNum = #{chatRoomNum} 
	   </update>
	   
       <update id="updatePresent_position">
	 	 	update dk_chat_member set present_position = #{changePosition} where chatRoomNum = #{chatRoomNum} and chat_memberId = #{chat_memberId}  
	   </update>
	   
      <select id="getMyRoomStatus" resultType="int"> 
			  select present_position from dk_chat_member where chatRoomNum = #{chatRoomNum} and chat_memberId = #{myId}
	   </select>
	   
	   <select id="getRoomHeadCount" resultType="int"> 
			  select headCount from dk_chat_room where chatRoomNum = #{chatRoomNum}
	   </select>
	   
	   <delete id="removeChatRoom">
       		delete from dk_chat_room where chatRoomNum = #{chatRoomNum}
       </delete>
       
       <select id="getHeadCount" resultType="int">
       		select headCount from dk_chat_room where chatRoomNum = #{chatRoomNum}
       </select>
       
       <select id="getChatMembers" resultType="String"> 
			  select chat_memberId from dk_chat_member where chatRoomNum = #{chatRoomNum} and present_position = 0
	   </select>
	   
	   <insert id="createChatReadType">
	 			insert into dk_chat_read (	  	  chatReadNum
									 			, chatContentNum
									 			, chat_memberId
							 			   )
							 		values(
								 				 seq_dk_chat_read.nextval
												,#{chatContentNum}
												,#{chat_memberId}
							 				) 	
       </insert>
       
</mapper>
